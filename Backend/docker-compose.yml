version: '3'
services:
  api:
    build: ./API
    command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "npm", "start"]
    ports:
      - "3000:3000"
    volumes:
      - almacenamientoVideos:/mnt/volumen
    networks:
      - oneTakeNetwork
    environment:
      API_KEY: ${API_KEY:-1234}

  transcodificador:
    build: ./Transcodificador
    command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "node", "transcoder.js"]
    volumes:
      - almacenamientoVideos:/mnt/volumen
    networks:
      - oneTakeNetwork

  cleaner:
    build: ./Cleaner
    command: ["./wait-for-it.sh", "-t", "35", "api:3000", "--", "node", "videoCleaner.js"]
    volumes:
      - almacenamientoVideos:/mnt/volumen
    networks:
      - oneTakeNetwork
    container_name: cleaner
    environment:
      API_KEY: ${API_KEY:-1234}

  ofelia:
    image: mcuadros/ofelia:0.3.11
    depends_on:
      - cleaner
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.job-run.clean.schedule: "0 0 0 * * *"
      ofelia.job-run.clean.container: "cleaner"

  rabbitmq:
    image: rabbitmq:3.13.1-management
    ports:
      - "15673:15672"
    networks:
      - oneTakeNetwork

  mysql:
    image: mysql:8.3.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: OneTake
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    networks:
      - oneTakeNetwork
    volumes:
      - ./Scripts/script.sql:/docker-entrypoint-initdb.d/script.sql

  dozzle:
    image: amir20/dozzle:v6.5.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080

networks:
  oneTakeNetwork:

volumes:
  almacenamientoVideos: